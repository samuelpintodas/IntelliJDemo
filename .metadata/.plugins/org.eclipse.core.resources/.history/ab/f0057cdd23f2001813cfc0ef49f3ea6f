import java.util.ArrayList;

public class Sudoku
{
	
	   static int [][]grille = {	{0, 0, 4, 	0, 0, 0, 	5, 0, 0},
  			 						{0, 0, 3, 	2, 0, 6, 	9, 0, 0},
  			 						{6, 0, 0, 	0, 5, 0, 	0, 0, 3},
  			 	
  			 						{0, 4, 1, 	7, 0, 9, 	3, 5, 0},
  			 						{0, 0, 0, 	0, 0, 0, 	0, 0, 0},
  			 						{0, 5, 6, 	3, 0, 2, 	8, 7, 0},
  			 	
  			 						{8, 0, 0, 	0, 3, 0, 	0, 0, 7},
  			 						{0, 0, 2, 	9, 0, 7, 	1, 0, 0},
  			 						{0, 0, 7, 	0, 0, 0, 	6, 0, 0}} ;

	
	public Sudoku (int [][] matrix)
	{
		
		resolve(matrix);
			
	}   
	   
	private void resolve(int[][] matrix)
	{
		
		
		
	}
	
	private boolean placement(int number, int row, int column)
	{
		
		
		
		
		return false;
	}

	private boolean myMiniMatrix(int row, int column)
	{
		ArrayList <Integer> numbers = new ArrayList<Integer>();
		
		int myNumber = grille[row][column];
		int startRow = testLine(row);
		int startColumn = testLine(column);
		int lastRow = startRow + 2;
		int lastColumn = startColumn + 2;
		
		for(int i = startRow; i<=lastRow; i++)
		{
			for (int j = startColumn; j<=lastColumn; j ++)
			{
				numbers.add(grille[i][j]);
			}
		}
		
		if(numbers.contains(myNumber))
			return true;
		
		return false;
	}
	
	private int testLine(int line)
	{
		int myLine;
		
		if(line < 6)
		{
			if(line < 3)
				return 0;
			else
				return 3;
		}
		else
			return 6;
	}

	public static void main(String[] args)
	{

		Sudoku test = new Sudoku(grille);

	}
	


}
